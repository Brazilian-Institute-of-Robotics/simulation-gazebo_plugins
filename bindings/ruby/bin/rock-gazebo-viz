#! /usr/bin/env ruby
require 'vizkit'
require 'optparse'
require 'transformer'
require 'transformer/sdf'

start = true
env_plugin_name = nil
viz_frame = nil
transformer = false
parser = OptionParser.new do |opt|
    opt.banner = "rock-gazebo-viz [OPTIONS] worldfile"

    opt.on '--host HOSTNAME', String, 'the host we should connect to to find the rock_gazebo tasks' do |host|
        Orocos::CORBA.name_service.ip = host
    end

    opt.on '--[no-]start', 'do not start the rock_gazebo::ModelTask we need (the default is to start them automatically)' do |host|
        start = false
    end

    opt.on '--env=NAME', String, 'an environment plugin to load in the scene (e.g. Ocean)' do |name|
        env_plugin_name = name
    end

    opt.on '--viz-frame=NAME', String, 'the visualization frame' do |name|
        viz_frame = name
    end

    opt.on '--[no-]transformer', 'whether the transform tree should be displayed' do |flag|
        transformer = flag
    end
end

require 'rock/gazebo'
Rock::Gazebo.initialize
_, argv = Rock::Gazebo.resolve_worldfiles_and_models_arguments(ARGV)

path = parser.parse(argv)
if path.size != 1
    STDERR.puts parser
    exit 1
end
path = path.first

require 'rock_gazebo/viz'
RockGazebo.viz(path, env: env_plugin_name, start: start)
Vizkit.vizkit3d_widget.setTransformer(transformer)
if viz_frame
    Vizkit.vizkit3d_widget.setVisualizationFrame(viz_frame)
end

Vizkit.exec
